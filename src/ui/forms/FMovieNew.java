/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.forms;

import controller.Controller;
import domain.Actor;
import domain.Admin;
import domain.Genre;
import domain.Movie;
import java.awt.Color;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import ui.component.table.model.TableModelLeadCast;

/**
 *
 * @author Milica i Nikola
 */
public class FMovieNew extends javax.swing.JDialog {

//    Movie movie;
    private FormMode formmode;

    /**
     * Creates new form FMovieNew
     */
    public FMovieNew(java.awt.Frame parent, boolean modal, FormMode formmode) {
        super(parent, modal);
        initComponents();
        setFormmode(formmode);
        prepareView(formmode);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtxtMovieTitle = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtxtDirector = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtxtWriter = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jtxtDuration = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jbtnSaveMovie = new javax.swing.JButton();
        jbtnGenres = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtxtSynopsis = new javax.swing.JTextArea();
        cbDay = new javax.swing.JComboBox<>();
        cbMonth = new javax.swing.JComboBox<>();
        cbYear = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtxtGenres = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jtxtLeadCastFirstName = new javax.swing.JTextField();
        jtxtLeadCastLastName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblLeadCast = new javax.swing.JTable();
        jbtnRemoveActor = new javax.swing.JButton();
        jtxtLeadCastAs = new javax.swing.JTextField();
        jbtnAddActor = new javax.swing.JButton();
        jlblLeadCastAs = new javax.swing.JLabel();
        jlblLeadCastFirstName = new javax.swing.JLabel();
        jlblLeadCastLastName = new javax.swing.JLabel();
        jbtnCancel = new javax.swing.JButton();
        jtxtMovieID = new javax.swing.JLabel();
        jlblChooseMovie = new javax.swing.JLabel();
        jcmbBoxAllMovies = new javax.swing.JComboBox<>();
        jbtnUpdate = new javax.swing.JButton();
        jbtnChange = new javax.swing.JButton();
        jbtnAddAnother = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("New Movie");

        jLabel1.setText("movieID:");

        jLabel2.setText("Title:");

        jLabel3.setText("Date:");

        jLabel4.setText("Genres:");

        jLabel5.setText("Director:");

        jLabel6.setText("Writer:");

        jtxtWriter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtWriterActionPerformed(evt);
            }
        });

        jLabel8.setText("Duration (min):");

        jLabel9.setText("Synopsis:");

        jbtnSaveMovie.setText("Save");
        jbtnSaveMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSaveMovieActionPerformed(evt);
            }
        });

        jbtnGenres.setText("...");
        jbtnGenres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnGenresActionPerformed(evt);
            }
        });

        jtxtSynopsis.setColumns(20);
        jtxtSynopsis.setRows(5);
        jScrollPane2.setViewportView(jtxtSynopsis);

        jtxtGenres.setEditable(false);
        jtxtGenres.setColumns(20);
        jtxtGenres.setRows(5);
        jScrollPane3.setViewportView(jtxtGenres);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("LeadCast"));

        jtblLeadCast.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtblLeadCast);

        jbtnRemoveActor.setText("Remove");
        jbtnRemoveActor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnRemoveActorActionPerformed(evt);
            }
        });

        jbtnAddActor.setText("Add");
        jbtnAddActor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAddActorActionPerformed(evt);
            }
        });

        jlblLeadCastAs.setText("as");

        jlblLeadCastFirstName.setText("First name:");

        jlblLeadCastLastName.setText("Last name:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnRemoveActor)
                        .addContainerGap(70, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlblLeadCastFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlblLeadCastLastName))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jtxtLeadCastLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jlblLeadCastAs)
                                .addGap(18, 18, 18)
                                .addComponent(jtxtLeadCastAs)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbtnAddActor))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtLeadCastFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtLeadCastFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblLeadCastFirstName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtLeadCastLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblLeadCastAs)
                    .addComponent(jtxtLeadCastAs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnAddActor)
                    .addComponent(jlblLeadCastLastName))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jbtnRemoveActor)
                        .addGap(91, 91, 91))))
        );

        jbtnCancel.setText("Cancel");
        jbtnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCancelActionPerformed(evt);
            }
        });

        jlblChooseMovie.setText("Choose movie:");

        jcmbBoxAllMovies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcmbBoxAllMoviesActionPerformed(evt);
            }
        });

        jbtnUpdate.setText("Update");
        jbtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnUpdateActionPerformed(evt);
            }
        });

        jbtnChange.setText("Change");
        jbtnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnChangeActionPerformed(evt);
            }
        });

        jbtnAddAnother.setText("Add another");
        jbtnAddAnother.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAddAnotherActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jbtnCancel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtnAddAnother)
                .addGap(18, 18, 18)
                .addComponent(jbtnChange)
                .addGap(18, 18, 18)
                .addComponent(jbtnUpdate)
                .addGap(18, 18, 18)
                .addComponent(jbtnSaveMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(36, 36, 36)
                        .addComponent(jtxtDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(62, 62, 62)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jbtnGenres, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbDay, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(61, 61, 61)
                                .addComponent(cbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(cbYear, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtMovieID, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtMovieTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(37, 37, 37)
                            .addComponent(jtxtWriter, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(38, 38, 38)
                            .addComponent(jtxtDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlblChooseMovie)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcmbBoxAllMovies, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblChooseMovie)
                    .addComponent(jcmbBoxAllMovies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jtxtMovieID, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2))
                    .addComponent(jtxtMovieTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel3))
                    .addComponent(cbDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jbtnGenres)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel5))
                    .addComponent(jtxtDirector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel6))
                    .addComponent(jtxtWriter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel8))
                    .addComponent(jtxtDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnSaveMovie)
                    .addComponent(jbtnCancel)
                    .addComponent(jbtnUpdate)
                    .addComponent(jbtnChange)
                    .addComponent(jbtnAddAnother))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtWriterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtWriterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtWriterActionPerformed

    private void jbtnGenresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnGenresActionPerformed
        Controller.getInstance().getMap().put("current_fmovienew", this);
        JDialog dialog = new FGenres(null, true);
        dialog.setVisible(true);

    }//GEN-LAST:event_jbtnGenresActionPerformed

    private void jbtnSaveMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSaveMovieActionPerformed
        Date date = getSelectedDate();
        List<Actor> actors = (List<Actor>) Controller.getInstance().getMap().get("leadcast");
        if (date != null && jtblLeadCast.getModel().getRowCount() > 0 && !jtxtMovieTitle.getText().isEmpty() && !jtxtDirector.getText().isEmpty() && !jtxtWriter.getText().isEmpty() && !jtxtDuration.getText().isEmpty() && !jtxtSynopsis.getText().isEmpty()) {
            try {
                if (jtxtGenres.getText().isEmpty()) {
                    jbtnGenres.setBorder(BorderFactory.createLineBorder(Color.RED, 5));
                    JOptionPane.showMessageDialog(this, "You must set genders!");
                } else {
                    Long duration = Long.parseLong(jtxtDuration.getText());
                    if (duration < 0) {
                        throw new NumberFormatException();
                    }

                    Movie movie = new Movie(null, jtxtMovieTitle.getText(), date, (List<Genre>) Controller.getInstance().getMap().get("chosen_genres"), jtxtDirector.getText(), jtxtWriter.getText(), actors, duration, jtxtSynopsis.getText(), new Admin());
                    for (Actor actor : actors) {
                        Controller.getInstance().saveActor(actor);
                    }
                    movie = Controller.getInstance().saveMovie(movie);

                    Controller.getInstance().getMap().put("current_movie", movie);
                    jbtnAddAnother.setVisible(true);
                    jtxtMovieID.setText(String.valueOf(movie.getMovieID()));

//                    setFormmode(FormMode.FORM_VIEW);
//                    prepareView(FormMode.FORM_VIEW);
                }
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(this, "Duration must be number(positive)!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "All fields about actor must be filled in!");
        }
    }//GEN-LAST:event_jbtnSaveMovieActionPerformed

    public JTextArea getJtxtGenres() {
        return jtxtGenres;
    }

    public void setJtxtGenres(JTextArea jtxtGenres) {
        this.jtxtGenres = jtxtGenres;
    }

    private void jbtnAddActorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAddActorActionPerformed
        String actorFirstName = jtxtLeadCastFirstName.getText();
        String actorLastName = jtxtLeadCastLastName.getText();
        String actorRole = jtxtLeadCastAs.getText();
        if (!actorFirstName.isEmpty() && !actorLastName.isEmpty() && !actorRole.isEmpty()) {
            Actor newActor = new Actor(actorFirstName, actorLastName, actorRole);
            List<Actor> allActors = (List<Actor>) Controller.getInstance().getMap().get("leadcast");
            if (allActors == null) {
                allActors = new ArrayList<>();
            }
            allActors.add(newActor);
            Controller.getInstance().getMap().put("leadcast", allActors);
            jtblLeadCast.setModel(new TableModelLeadCast((List<Actor>) Controller.getInstance().getMap().get("leadcast")));
        } else {
            JOptionPane.showMessageDialog(null, "All fields about actor must be filled in!");
        }
    }//GEN-LAST:event_jbtnAddActorActionPerformed

    private void jbtnRemoveActorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnRemoveActorActionPerformed

        TableModelLeadCast model = (TableModelLeadCast) jtblLeadCast.getModel();
        int rowIndex = jtblLeadCast.getSelectedRow();
        if (rowIndex >= 0) {
            model.removeActor(rowIndex);

        } else {
            JOptionPane.showMessageDialog(this, "Please select actor!");
        }
    }//GEN-LAST:event_jbtnRemoveActorActionPerformed

    private void jbtnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbtnCancelActionPerformed

    private void jcmbBoxAllMoviesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmbBoxAllMoviesActionPerformed
        Movie selectedMovie = (Movie) jcmbBoxAllMovies.getSelectedItem();
        if (selectedMovie != null) {
            fillMovie(selectedMovie);
            Controller.getInstance().getMap().put("current_movie", selectedMovie);
            Controller.getInstance().getMap().put("leadcast", selectedMovie.getLeadCast());
            Controller.getInstance().getMap().put("chosen_genres", selectedMovie.getGenres());
            setFormmode(FormMode.FORM_VIEW);
            prepareView(FormMode.FORM_VIEW);

        }
    }//GEN-LAST:event_jcmbBoxAllMoviesActionPerformed

    private void jbtnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnChangeActionPerformed
        setFormmode(FormMode.FORM_UPDATE);
        prepareView(FormMode.FORM_UPDATE);
    }//GEN-LAST:event_jbtnChangeActionPerformed

    private void jbtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnUpdateActionPerformed
        Date date = getSelectedDate();
        List<Actor> actors = (List<Actor>) Controller.getInstance().getMap().get("leadcast");
        if (date != null && jtblLeadCast.getModel().getRowCount() > 0 && !jtxtMovieTitle.getText().isEmpty() && !jtxtDirector.getText().isEmpty() && !jtxtWriter.getText().isEmpty() && !jtxtDuration.getText().isEmpty() && !jtxtSynopsis.getText().isEmpty()) {
            try {
                if (jtxtGenres.getText().isEmpty()) {
                    jbtnGenres.setBorder(BorderFactory.createLineBorder(Color.RED, 5));
                    JOptionPane.showMessageDialog(this, "You must set genders!");
                } else {
                    Long duration = Long.parseLong(jtxtDuration.getText());
                    if (duration < 0) {
                        throw new NumberFormatException();
                    }

//                    Movie movie = new Movie(null, jtxtMovieTitle.getText(), date, (List<Genre>) Controller.getInstance().getMap().get("chosen_genres"), jtxtDirector.getText(), jtxtWriter.getText(), actors, duration, jtxtSynopsis.getText(), new Admin());
                    Movie movie = (Movie) Controller.getInstance().getMap().get("current_movie");
                    movie.setDirector(jtxtDirector.getText());
                    movie.setDuration(Long.valueOf(jtxtDuration.getText()));
                    movie.setGenres((List<Genre>) Controller.getInstance().getMap().get("chosen_gernes"));
                    movie.setLeadCast(actors);
                    movie.setReleasedDate(date);
                    movie.setSynopsis(jtxtSynopsis.getText());
                    movie.setTitle(jtxtMovieTitle.getText());
                    movie.setWriter(jtxtWriter.getText());
                    for (Actor actor : actors) {
                        Controller.getInstance().saveActor(actor);
                    }
                    movie = Controller.getInstance().updateMovie(movie);

                    Controller.getInstance().getMap().put("current_movie", movie);
                    setFormmode(FormMode.FORM_VIEW);
                    prepareView(FormMode.FORM_VIEW);
                }
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(this, "Duration must be number(positive)!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "All fields about actor must be filled in!");
        }
    }//GEN-LAST:event_jbtnUpdateActionPerformed

    private void jbtnAddAnotherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAddAnotherActionPerformed
        jtxtDirector.setText("");
        jtxtDuration.setText("");
        jtxtGenres.setText("");
        jtxtLeadCastAs.setText("");
        jtxtLeadCastFirstName.setText("");
        jtxtLeadCastLastName.setText("");
        jtxtMovieID.setText("");
        jtxtMovieTitle.setText("");
        jtxtSynopsis.setText("");
        jtxtWriter.setText("");

        prepareView(FormMode.FORM_ADD);
    }//GEN-LAST:event_jbtnAddAnotherActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FMovieNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FMovieNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FMovieNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FMovieNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                FMovieNew dialog = new FMovieNew(new javax.swing.JFrame(), true, FormMode.FORM_ADD);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbDay;
    private javax.swing.JComboBox<String> cbMonth;
    private javax.swing.JComboBox<String> cbYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton jbtnAddActor;
    private javax.swing.JButton jbtnAddAnother;
    private javax.swing.JButton jbtnCancel;
    private javax.swing.JButton jbtnChange;
    private javax.swing.JButton jbtnGenres;
    private javax.swing.JButton jbtnRemoveActor;
    private javax.swing.JButton jbtnSaveMovie;
    private javax.swing.JButton jbtnUpdate;
    private javax.swing.JComboBox<Movie> jcmbBoxAllMovies;
    private javax.swing.JLabel jlblChooseMovie;
    private javax.swing.JLabel jlblLeadCastAs;
    private javax.swing.JLabel jlblLeadCastFirstName;
    private javax.swing.JLabel jlblLeadCastLastName;
    private javax.swing.JTable jtblLeadCast;
    private javax.swing.JTextField jtxtDirector;
    private javax.swing.JTextField jtxtDuration;
    private javax.swing.JTextArea jtxtGenres;
    private javax.swing.JTextField jtxtLeadCastAs;
    private javax.swing.JTextField jtxtLeadCastFirstName;
    private javax.swing.JTextField jtxtLeadCastLastName;
    private javax.swing.JLabel jtxtMovieID;
    private javax.swing.JTextField jtxtMovieTitle;
    private javax.swing.JTextArea jtxtSynopsis;
    private javax.swing.JTextField jtxtWriter;
    // End of variables declaration//GEN-END:variables

    private void prepareView(FormMode mode) {
        setLocationRelativeTo(null);

//        List<Actor> actors = new ArrayList<>();
//        Controller.getInstance().getMap().put("leadcast", actors);
//        jtblLeadCast.setModel(new TableModelLeadCast((List<Actor>) Controller.getInstance().getMap().get("leadcast")));
        if (mode.equals(FormMode.FORM_ADD)) {
            Controller.getInstance().getMap().put("leadcast", null);
            jbtnAddAnother.setVisible(false);
            jbtnChange.setVisible(false);
            jbtnAddActor.setVisible(true);
            jcmbBoxAllMovies.setVisible(false);
            jbtnUpdate.setVisible(false);
            fillDate();
            jcmbBoxAllMovies.setVisible(false);
            jlblChooseMovie.setVisible(false);
        }
        if (mode.equals(FormMode.FORM_OPENING)) {
            jbtnAddAnother.setVisible(false);
            jlblChooseMovie.setVisible(true);
            for (Movie movie : Controller.getInstance().getAllMovies()) {
                jcmbBoxAllMovies.addItem(movie);
            }
            fillDate();
            jcmbBoxAllMovies.setVisible(true);
            jbtnUpdate.setVisible(false);
            jbtnChange.setVisible(true);

        }
        if (mode.equals(FormMode.FORM_VIEW)) {
            jbtnAddAnother.setVisible(false);
            jlblChooseMovie.setVisible(false);
            jcmbBoxAllMovies.setVisible(true);
            jbtnUpdate.setVisible(false);
            jbtnChange.setVisible(true);

            jlblLeadCastAs.setVisible(false);
            jlblLeadCastFirstName.setVisible(false);
            jlblLeadCastLastName.setVisible(false);
            jlblChooseMovie.setVisible(true);

            //sve ostaje ostalo isto al vrati se kasnije
            jbtnSaveMovie.setVisible(false);
            jbtnAddActor.setVisible(false);
            jbtnGenres.setVisible(false);
            jbtnRemoveActor.setVisible(false);
            jtxtDirector.setEditable(false);
            jtxtDuration.setEditable(false);
            jtxtLeadCastAs.setEditable(false);
            jtxtLeadCastFirstName.setEditable(false);
            jtxtLeadCastLastName.setEditable(false);
            jtxtMovieTitle.setEditable(false);
            jtxtSynopsis.setEditable(false);
            jtxtWriter.setEditable(false);
        }
        if (mode.equals(FormMode.FORM_UPDATE)) {
            jbtnAddAnother.setVisible(false);
            jlblChooseMovie.setVisible(true);
//            for (Movie movie : Controller.getInstance().getAllMovies()) {
//                jcmbBoxAllMovies.addItem(movie);
//            }
//            Movie m = (Movie) Controller.getInstance().getMap().get("current_movie");
            jcmbBoxAllMovies.setVisible(true);
            jbtnUpdate.setVisible(true);
            jbtnChange.setVisible(false);
            jlblLeadCastAs.setVisible(true);
            jlblLeadCastFirstName.setVisible(true);
            jlblLeadCastLastName.setVisible(true);
            jbtnGenres.setVisible(true);
            jbtnAddActor.setVisible(true);
            jtxtLeadCastAs.setVisible(true);
            jtxtLeadCastFirstName.setVisible(true);
            jtxtLeadCastLastName.setVisible(true);
            jbtnRemoveActor.setVisible(true);

            jtxtDirector.setEditable(true);
            jtxtDuration.setEditable(true);
            jtxtLeadCastAs.setEditable(true);
            jtxtLeadCastFirstName.setEditable(true);
            jtxtLeadCastLastName.setEditable(true);
            jtxtMovieTitle.setEditable(true);
            jtxtSynopsis.setEditable(true);
            jtxtWriter.setEditable(true);

        }

    }

    private void fillDate() throws NumberFormatException {
        cbDay.removeAllItems();
        cbMonth.removeAllItems();
        cbYear.removeAllItems();
        for (int i = 1; i < 32; i++) {
            cbDay.addItem(i + "");
        }
        for (int i = 1; i < 13; i++) {
            cbMonth.addItem(i + "");
        }
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy");
        Date date = new Date();
        int year = Integer.parseInt(sdf.format(date));
        for (int i = year; i >= 1800; i--) {
            cbYear.addItem(i + "");
        }
    }

    private Date getSelectedDate() {
        String day = (String) cbDay.getSelectedItem();
        String month = (String) cbMonth.getSelectedItem();
        String year = (String) cbYear.getSelectedItem();
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");

        try {
            return sdf.parse(day + "." + month + "." + year);
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        return null;
    }
//FALITI SETDATE za sve
    private void fillMovie(Movie movie) {
        String s = "";
        jtxtMovieID.setText(movie.getMovieID() + "");
        jtxtDirector.setText(movie.getDirector());
        jtxtDuration.setText(movie.getDuration().toString());
        jtxtMovieTitle.setText(movie.getTitle());
        for (Genre genre : movie.getGenres()) {
            s += String.valueOf(genre) + " ";

        }
        jtxtGenres.setText(s);
        jtxtMovieTitle.setText(movie.getTitle());
        jtxtSynopsis.setText(movie.getSynopsis());
        jtxtWriter.setText(movie.getWriter());
        jtblLeadCast.setModel(new TableModelLeadCast(movie.getLeadCast()));
    }

    public FormMode getFormmode() {
        return formmode;
    }

    public void setFormmode(FormMode formmode) {
        this.formmode = formmode;
    }

}
