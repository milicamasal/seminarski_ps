/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.forms;

import controller.Controller;
import domain.Genre;
import domain.Movie;
import java.awt.Checkbox;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;

/**
 *
 * @author Milica i Nikola
 */
public class FGenres extends javax.swing.JDialog {

    /**
     * Creates new form FGenre
     */
    public FGenres(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        prepareForm();

    }

 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FGenres.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FGenres.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FGenres.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FGenres.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FGenres dialog = new FGenres(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private void prepareForm() {
        FMovieNew openedForm = (FMovieNew) Controller.getInstance().getMap().get("current_fmovienew");
        this.setLocationRelativeTo(null);
        this.setLayout(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();

        Genre[] checkBoxes = Genre.values();
        gbc.weightx = 0.1;
        gbc.insets = new Insets(10, 10, 10, 10);
        gbc.anchor = GridBagConstraints.LINE_START;
        gbc.gridx = 0;
        gbc.gridy = 0;
        List<JCheckBox> checkBoxesGenre = new ArrayList();

        for (Genre checkBox : checkBoxes) {
            JCheckBox currentCheckBox = new JCheckBox(String.valueOf(checkBox));
            this.add(currentCheckBox, gbc);
            checkBoxesGenre.add(currentCheckBox);
            gbc.gridy++;

            if (String.valueOf(checkBox).equals(String.valueOf(checkBoxes[(checkBoxes.length / 2)]))) {
                gbc.gridx++;
                gbc.gridy = 0;
            }
        }
        gbc.gridx++;
        gbc.gridy = (checkBoxes.length / 2) + 1;
        JButton jbtnSave = new JButton("Save");
        this.add(jbtnSave, gbc);
        if(openedForm.getFormmode().equals(FormMode.FORM_UPDATE)){
        Movie movie = (Movie)Controller.getInstance().getMap().get("current_movie");
            for (JCheckBox jCheckBox : checkBoxesGenre) {
                for (Genre genre : movie.getGenres()) {
                    if(jCheckBox.getText().equals(String.valueOf(genre))){
                    jCheckBox.setSelected(true);
                    }
                }
            }
        }
        pack();

        jbtnSave.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int flag = 0;//nije izabrao nijedan
                String genres = "";
                List<Genre> chosenGenres = new ArrayList();
                for (JCheckBox jCheckBox : checkBoxesGenre) {
                    if (jCheckBox.isSelected()) {
                        flag = 1;
                        chosenGenres.add(Genre.valueOf(jCheckBox.getText()));
                        genres += String.valueOf(jCheckBox.getText()) + " ";
                    }
                }
                if (flag == 0) {
                    JOptionPane.showMessageDialog(null, "You must choose genre!");
                } else {
                    Controller.getInstance().getMap().put("chosen_genres", chosenGenres);
                    FMovieNew openedForm = (FMovieNew) Controller.getInstance().getMap().get("current_fmovienew");
                    openedForm.getJtxtGenres().setText(genres);
                }
                dispose();
            }

        });

    }

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
